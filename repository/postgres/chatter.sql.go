// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: chatter.sql

package postgres

import (
	"context"
)

const registerChatter = `-- name: RegisterChatter :exec
INSERT INTO chatters (
    username,
    password,
    email
) VALUES (
    $1, $2, $3
) RETURNING username, password, email, created_at
`

type RegisterChatterParams struct {
	Username string
	Password string
	Email    string
}

func (q *Queries) RegisterChatter(ctx context.Context, arg RegisterChatterParams) error {
	_, err := q.db.ExecContext(ctx, registerChatter, arg.Username, arg.Password, arg.Email)
	return err
}

const verifyChatter = `-- name: VerifyChatter :one
SELECT username, password, email, created_at FROM chatters
WHERE username = $1
`

func (q *Queries) VerifyChatter(ctx context.Context, username string) (Chatter, error) {
	row := q.db.QueryRowContext(ctx, verifyChatter, username)
	var i Chatter
	err := row.Scan(
		&i.Username,
		&i.Password,
		&i.Email,
		&i.CreatedAt,
	)
	return i, err
}
